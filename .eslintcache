[{"C:\\Projetos\\netflixclone\\src\\index.js":"1","C:\\Projetos\\netflixclone\\src\\App.js":"2","C:\\Projetos\\netflixclone\\src\\Tmdb.js":"3","C:\\Projetos\\netflixclone\\src\\components\\MovieRow\\index.js":"4","C:\\Projetos\\netflixclone\\src\\components\\Header\\index.js":"5","C:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie\\index.js":"6","C:\\Projetos\\netflixclone\\src\\reportWebVitals.js":"7"},{"size":246,"mtime":1612020419135,"results":"8","hashOfConfig":"9"},{"size":2046,"mtime":1612159338080,"results":"10","hashOfConfig":"9"},{"size":2562,"mtime":1612159682213,"results":"11","hashOfConfig":"9"},{"size":1756,"mtime":1612159150674,"results":"12","hashOfConfig":"9"},{"size":508,"mtime":1612159078527,"results":"13","hashOfConfig":"9"},{"size":1803,"mtime":1612158989848,"results":"14","hashOfConfig":"9"},{"size":375,"mtime":1612159583116,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"uxe55b",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projetos\\netflixclone\\src\\index.js",["33"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["34","35"],"C:\\Projetos\\netflixclone\\src\\App.js",["36"],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nexport default () =>{\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData]= useState(null);\n  const [blackHeader, setblackHeader]= useState(false);\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      let originals = list.filter(i=> i.slug === 'originals');\n      let randonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randonChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(()=>{\n    const scrollListener = () =>{\n        if(window.scrollY > 10){\n          setblackHeader(true);\n        }else{\n          setblackHeader(false);\n        }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () =>{\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return(\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featuredData && \n        <FeaturedMovie item ={featuredData}/>\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) =>(\n          <MovieRow key={key} title={item.title} items={item.items}></MovieRow>\n        ))\n\n        }\n      </section>\n      <footer>\n        Feito em Live (https://www.youtube.com/watch?v=tBweoUiMsDg) para estudo de react, todos os direitos das imagens s√£o da Netflix.\n        Dados Extraidos de https://www.themoviedb.org/\n      </footer>\n\n\n    {movieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"></img>\n      </div>\n    }\n    </div>\n  )\n}\n","C:\\Projetos\\netflixclone\\src\\Tmdb.js",["37"],"C:\\Projetos\\netflixclone\\src\\components\\MovieRow\\index.js",["38","39"],"C:\\Projetos\\netflixclone\\src\\components\\Header\\index.js",["40","41","42"],"C:\\Projetos\\netflixclone\\src\\components\\FeaturedMovie\\index.js",["43"],"C:\\Projetos\\netflixclone\\src\\reportWebVitals.js",[],{"ruleId":"44","severity":1,"message":"45","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":23},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":8,"column":1,"nodeType":"54","endLine":74,"endColumn":2},{"ruleId":"52","severity":1,"message":"55","line":9,"column":1,"nodeType":"54","endLine":73,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":6,"column":1,"nodeType":"54","endLine":51,"endColumn":2},{"ruleId":"56","severity":1,"message":"57","line":44,"column":29,"nodeType":"58","endLine":44,"endColumn":96},{"ruleId":"52","severity":1,"message":"53","line":4,"column":1,"nodeType":"54","endLine":15,"endColumn":2},{"ruleId":"56","severity":1,"message":"57","line":8,"column":17,"nodeType":"58","endLine":8,"endColumn":98},{"ruleId":"56","severity":1,"message":"57","line":11,"column":17,"nodeType":"58","endLine":11,"endColumn":107},{"ruleId":"52","severity":1,"message":"53","line":4,"column":1,"nodeType":"54","endLine":45,"endColumn":2},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]